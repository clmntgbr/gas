security:
  enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
      App\Entity\User:
        algorithm: auto
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email
    firewalls:
      dev:
        pattern: ^/(_(profiler|wdt)|css|images|js)/
        security: false
      api:
        pattern: ^/(api)(?!/docs)
        stateless: true
        provider: app_user_provider
        json_login:
          check_path: /api/authentication_token
          username_path: email
          password_path: password
          success_handler: lexik_jwt_authentication.handler.authentication_success
          failure_handler: lexik_jwt_authentication.handler.authentication_failure
        jwt: ~
      main:
        lazy: true
        provider: app_user_provider
        user_checker: App\Security\UserChecker
        custom_authenticators:
          - App\Security\SecurityAuthenticator
        logout:
          path: app_logout
          target: app_login
        remember_me:
          secret: '%kernel.secret%'
          lifetime: 604800
          path: /
          always_remember_me: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/api/authentication_token, roles: PUBLIC_ACCESS }
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
